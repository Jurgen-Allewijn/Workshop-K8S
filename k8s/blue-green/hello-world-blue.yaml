---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hello-world-service
  name: hello-world-service
spec:
  ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: hello-world-blue
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-world-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  defaultBackend:
    service:
      name: hello-world-service
      port:
        number: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hello-world-blue
  name: hello-world-blue
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-world-blue
  template:
    metadata:
      labels:
        app: hello-world-blue
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      containers:
        - image: avthart/hello-app:1.0.0
          name: hello-world-blue
          ports:
            - name: web
              containerPort: 8080
          env:
            - name: BACKGROUND_COLOR
              value: "blue"
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "150m"
          # liveness probes to know when to restart a Container.
          livenessProbe:
            httpGet:
              path: /health
              port: web
            initialDelaySeconds: 10
            periodSeconds: 5
          # readiness probes to know when a Container is ready to start accepting traffic.
          readinessProbe:
            httpGet:
              path: /health
              port: web
            initialDelaySeconds: 10
            periodSeconds: 5
